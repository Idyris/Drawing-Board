from tkinter import *
from tkinter.colorchooser import askcolor
from tkinter import ttk
import tkinter as tk

# Constants
WINDOW_TITLE = "White Board"
WINDOW_SIZE = "1050x580"
BACKGROUND_COLOR = "#f2f3f5"
CANVAS_BG_COLOR = "white"
COLOR_OPTIONS = [
    ('black', (10, 10, 30, 30)),
    ('red', (10, 40, 30, 60)),
    ('blue', (10, 70, 30, 90)),
    ('yellow', (10, 100, 30, 120)),
    ('gray', (10, 130, 30, 150)),
    ('green', (10, 160, 30, 180)),
    ('purple', (10, 190, 30, 210)),
    ('orange', (10, 220, 30, 240)),
    ('brown', (10, 250, 30, 270)),
]

# Initialize main window
root = Tk()
root.title(WINDOW_TITLE)
root.geometry(WINDOW_SIZE)
root.configure(bg=BACKGROUND_COLOR)
root.resizable(False, False)

# Global variables
current_x = 0
current_y = 0
current_color = 'black'
current_line_width = 1.0

def locate_xy(event):
    """Store the current mouse position."""
    global current_x, current_y
    current_x, current_y = event.x, event.y

def add_line(event):
    """Draw a line on the canvas from the last position to the current position."""
    global current_x, current_y
    board.create_line(current_x, current_y, event.x, event.y, 
                      width=current_line_width, fill=current_color, 
                      capstyle=ROUND, smooth=TRUE)
    current_x, current_y = event.x, event.y

def set_color(new_color):
    """Set the current drawing color."""
    global current_color
    current_color = new_color

def clear_board():
    """Clear the drawing board."""
    board.delete("all")
    display_palette()

def display_palette():
    """Display the color palette on the canvas."""
    for color, coords in COLOR_OPTIONS:
        rect_id = colors.create_rectangle(coords, fill=color)
        colors.tag_bind(rect_id, '<Button-1>', lambda _, c=color: set_color(c))

def get_current_line_width():
    """Return the current line width from the slider."""
    return '{:.2f}'.format(current_line_width)

def on_slider_change(event):
    """Update the line width based on the slider value."""
    global current_line_width
    current_line_width = current_value.get()
    value_label.configure(text=get_current_line_width())

# Load icons
root.iconphoto(False, PhotoImage(file=r"c:\Users\VP\Downloads\icons8-draw-48.png"))
eraser_icon = PhotoImage(file=r"c:\Users\VP\Downloads\eraser.png")

# Create UI components
Button(root, image=eraser_icon, bg=BACKGROUND_COLOR, command=clear_board).place(x=20, y=400)

colors = Canvas(root, bg=CANVAS_BG_COLOR, width=37, height=300, bd=0)
colors.place(x=25, y=60)
display_palette()

board = Canvas(root, width=930, height=500, bg=CANVAS_BG_COLOR, cursor="hand2")
board.place(x=100, y=20)

# Bind mouse events to the canvas
board.bind('<Button-1>', locate_xy)
board.bind('<B1-Motion>', add_line)

# Slider for line width
current_value = tk.DoubleVar(value=current_line_width)
slider = ttk.Scale(root, from_=1, to=100, orient='horizontal', command=on_slider_change, variable=current_value)
slider.place(x=100, y=530)

# Label to display current line width
value_label = ttk.Label(root, text=get_current_line_width())
value_label.place(x=100, y=550)

# Start the main loop
root.mainloop()